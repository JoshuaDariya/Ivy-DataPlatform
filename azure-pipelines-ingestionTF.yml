# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: TFvars

jobs:
  - job: TFinstall
    displayName: Install Terraform
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'

  - job: TFinit
    displayName: Terraform Init
    steps:
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: 'terraform'
          backendServiceArm: 'Ivy Dev Data Platform'
          backendAzureRmResourceGroupName: 'rg-ivydataplatform-prod-eastus'
          backendAzureRmStorageAccountName: 'stivylakehouseprod'
          backendAzureRmContainerName: 'ivy-tf-container'
          backendAzureRmKey: 'terraform.tfstate'


  - job: TFinit
    displayName: Terraform Plan
    steps:
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: 'terraform'
          environmentServiceNameAzureRM: 'Ivy Dev Data Platform'
          commandOptions: '-input=false -var account=$(account) -var password=$(pass) -var region=$(region) -var username=$(user)'
      

  - job: TFinit
    displayName: Terraform Apply
    steps:
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: 'terraform'
          environmentServiceNameAzureRM: 'Ivy Dev Data Platform'
        