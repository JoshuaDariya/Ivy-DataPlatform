# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: install
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          export SNOWFLAKE_USER="tf-snow"
          export SNOWFLAKE_PRIVATE_KEY_PATH="terraform/.snowflake_tf_snow_key.p8"
          export SNOWFLAKE_ACCOUNT="JL89715"
          export SNOWFLAKE_REGION="AZURE_EASTUS2"
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'terraform'
        backendServiceArm: 'Ivy Dev Data Platform'
        backendAzureRmResourceGroupName: 'rg-ivydataplatform-prod-eastus'
        backendAzureRmStorageAccountName: 'stivylakehouseprod'
        backendAzureRmContainerName: 'ivy-tf-container'
        backendAzureRmKey: 'terraform.tfstate'

    # - task: Bash@3
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       echo "Initializing Terraform"
    #       terraform init
    #     workingDirectory: 'terraform'
    
