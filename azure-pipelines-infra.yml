# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

# TODO Move to ADO/Pipeline variable/config
variables:
  ServiceConnectionName: 'Ivy Dev Data Platform' 
  EnvironmentType: 'Test'
  ResourceGroupName: 'rg-ivydataplatform-dev-eastus'
  DeploymentDefaultLocation: 'eastus' 

steps:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Infrastructure Bicep'
    inputs:
      deploymentScope: 'Resource Group'
      connectedServiceName: $(ServiceConnectionName)
      location: $(DeploymentDefaultLocation)
      resourceGroupName: $(ResourceGroupName)
      csmFile: resources/main.bicep
      # overrideParameters: >
      #   -environmentType $(EnvironmentType)

  - task: AzureCLI@2
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        servicePrincipalObjectId=045366d9-b0c7-4da6-a28d-a772e3e725bd
        resourceGroup=rg-ivydataplatform-dev-eastus
        customRoleName=CustomContributor
        az role assignment create --assignee-object-id $servicePrincipalObjectId --role Contributor --scope $resourceGroup --name $customRoleName
    displayName: 'Assign Custom Role'

#Task for focusing on roles and permissions
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Roles to RG'
    inputs:
      deploymentScope: 'Resource Group'
      connectedServiceName: $(ServiceConnectionName)
      location: $(DeploymentDefaultLocation)
      resourceGroupName: $(ResourceGroupName)
      csmFile: resources/roles.bicep
      # overrideParameters: >
      #   -environmentType $(EnvironmentType)